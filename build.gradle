import java.io.File;
import java.nio.file.Files;
import java.nio.file.FileSystems;
import java.nio.file.Paths;

apply plugin: 'java'

def rootDirName = "kafka-worker-dir"

def kafkaVersion = "1.1.0"

sourceCompatibility = 1.8

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
  options.encoding = 'UTF-8'
}

repositories {
  maven {
    url "https://maven.atlassian.com/3rdparty"
  }
  maven {
    url "http://central.maven.org/maven2"
  }
}

dependencies {
  compile group: 'org.apache.kafka', name: 'connect-api', version: kafkaVersion
  compile group: 'org.apache.kafka', name: 'connect-json', version: kafkaVersion
  compile group: 'org.apache.kafka', name: 'kafka-clients', version: kafkaVersion
  compile group: 'org.apache.kafka', name: 'kafka-log4j-appender', version: kafkaVersion
  compile group: 'org.apache.kafka', name: 'connect-runtime', version: kafkaVersion
}

String buildWorkerFolder = "build/${rootDirName}/"
String buildRootFolder = buildWorkerFolder + rootDirName
jar {
  configurations.compile.each { File path ->
    String buildJarFolder = buildRootFolder + "/lib"
    if(!new File(buildJarFolder).exists()){
      new File(buildJarFolder).mkdirs();
    }
    String newJarFilePath = buildJarFolder + "/" + path.name
    if(!new File(newJarFilePath).exists()){
      Files.copy(path.toPath(), FileSystems.getDefault().getPath(newJarFilePath))
    }
  }

  copy {
    from "${project.projectDir}/start"
    into buildRootFolder + '/bin'
  }

  copy {
    from "${project.projectDir}/config"
    into buildRootFolder + '/config'
  }

}

task packageDistribution(type: Zip) {
  archiveName = "${rootDirName}.zip"
  destinationDir = file("${buildDir}")
  from "${buildWorkerFolder}"
}
